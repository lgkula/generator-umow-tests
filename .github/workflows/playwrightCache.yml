name: Playwright Tests Cache
on:
    workflow_dispatch:
    # schedule:
    # - cron: '0 */8 * * *'
    push:
        branches: [master]
    pull_request:
        branches: [master]
jobs:
    tests_on_stage:
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Cache Node Modules
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: node-modules-${{ hashFiles('package-lock.json') }}

            - name: Install Dependencies
              run: npm ci

            - name: Store Playwright's Version
              run: |
                  PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
                  echo "Playwright's Version: $PLAYWRIGHT_VERSION"
                  echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

            - name: Cache Playwright Browsers for Playwright's Version
              id: cache-playwright-browsers
              uses: actions/cache@v4
              with:
                  path: ~/.cache/ms-playwright
                  key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

            - name: Setup Playwright
              if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
              run: npx playwright install --with-deps

            - name: Run Playwright tests on stage
              env:
                  ENV: 'Stage'
                  TEST_ADMIN_USER: ${{ secrets.TEST_ADMIN_USER }}
                  TEST_ADMIN_PASSWORD: ${{ secrets.TEST_ADMIN_PASSWORD }}
              run: npx playwright test
            - uses: actions/upload-artifact@v4
              if: failure()
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 30
